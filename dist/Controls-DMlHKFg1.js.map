{"version":3,"file":"Controls-DMlHKFg1.js","sources":["../src/Engine/Controls.js"],"sourcesContent":["import {\r\n  CommandClick,\r\n  CommandHold,\r\n  CommandMouseMove,\r\n  CommandOnce,\r\n  CommandSwipe,\r\n  CommandToggle,\r\n  CommandTouchMaintain,\r\n} from \"@/Bundles/Core/Commands\";\r\nimport { Vector2 } from \"@/Bundles/Core\";\r\n\r\nclass Controls {\r\n  stack = [];\r\n  commands = [];\r\n  onceCommandsExecuted = [];\r\n\r\n  pointerLock = null;\r\n\r\n  mouse = new Vector2();\r\n  touchStart = new Vector2();\r\n  touch = new Vector2();\r\n\r\n  constructor(pointerLock = false) {\r\n    window.addEventListener(\"keyup\", this.#onKeyUp.bind(this));\r\n    window.addEventListener(\"keydown\", this.#onKeyDown.bind(this));\r\n    window.addEventListener(\"mousemove\", this.#onMouseMove.bind(this));\r\n    window.addEventListener(\"click\", this.#onClick.bind(this));\r\n    window.addEventListener(\"touchstart\", this.#onTouchStart.bind(this));\r\n    window.addEventListener(\"touchmove\", this.#onTouchMove.bind(this));\r\n    window.addEventListener(\"touchend\", this.#onTouchEnd.bind(this));\r\n\r\n    if (pointerLock) {\r\n      document.onpointerlockchange = () => {\r\n        this.pointerLock = document.pointerLockElement;\r\n      };\r\n\r\n      document.body.addEventListener(\"click\", async (e) => {\r\n        e.stopPropagation();\r\n        if (e.which !== 3) {\r\n          await document.body.requestPointerLock({\r\n            unadjustedMovement: true,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    e.preventDefault();\r\n    let onClickCommands = this.commands.filter(\r\n      (command) => command instanceof CommandClick\r\n    );\r\n    onClickCommands.forEach((command) => {\r\n      command.execute({ mouse: this.mouse });\r\n    });\r\n  }\r\n\r\n  #onMouseMove(e) {\r\n    this.mouse.x = e.clientX;\r\n    this.mouse.y = e.clientY;\r\n\r\n    if (this.pointerLock) {\r\n      let mouseMoveCommands = this.commands.filter(\r\n        (command) => command instanceof CommandMouseMove\r\n      );\r\n\r\n      mouseMoveCommands.forEach((command) => {\r\n        command.execute(e);\r\n      });\r\n    }\r\n  }\r\n\r\n  #onTouchMove(e) {\r\n    this.touch.x = e.changedTouches[0].screenX;\r\n    this.touch.y = e.changedTouches[0].screenY;\r\n\r\n    let touchMaintainCommands = this.commands.filter(\r\n      (command) => command instanceof CommandTouchMaintain\r\n    );\r\n    touchMaintainCommands.forEach((command) =>\r\n      command.execute({ touchStart: this.touchStart, touch: this.touch })\r\n    );\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (this.stack.includes(e.code)) {\r\n      let foundIndex = this.stack.findIndex((s) => s === e.code);\r\n      if (foundIndex > -1) {\r\n        this.stack.splice(foundIndex, 1);\r\n      }\r\n    }\r\n\r\n    let toggleCommands = this.commands.filter(\r\n      (command) =>\r\n        command instanceof CommandToggle &&\r\n        e.code === command.key &&\r\n        command.executed\r\n    );\r\n    toggleCommands.forEach((command) => {\r\n      command.executed = false;\r\n      command.release();\r\n    });\r\n\r\n    let onceCommands = this.commands.filter(\r\n      (command) =>\r\n        command instanceof CommandOnce &&\r\n        e.code === command.key &&\r\n        command.executed\r\n    );\r\n    onceCommands.forEach((command) => {\r\n      command.executed = false;\r\n    });\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    if (!this.stack.includes(e.code)) {\r\n      this.stack.push(e.code);\r\n    }\r\n\r\n    let toggleCommands = this.commands.filter(\r\n      (command) =>\r\n        command instanceof CommandToggle &&\r\n        e.code === command.key &&\r\n        !command.executed\r\n    );\r\n    toggleCommands.forEach((command) => {\r\n      command.executed = true;\r\n      command.execute();\r\n    });\r\n\r\n    let onceCommands = this.commands.filter(\r\n      (command) =>\r\n        command instanceof CommandOnce &&\r\n        e.code === command.key &&\r\n        !command.executed\r\n    );\r\n    onceCommands.forEach((command) => {\r\n      command.executed = true;\r\n      command.execute();\r\n    });\r\n  }\r\n\r\n  #onTouchStart(e) {\r\n    this.touchStart.x = e.changedTouches[0].screenX;\r\n    this.touchStart.y = e.changedTouches[0].screenY;\r\n\r\n    let touchMaintainCommands = this.commands.filter(\r\n      (command) => command instanceof CommandTouchMaintain\r\n    );\r\n    touchMaintainCommands.forEach((command) => (command.started = true));\r\n  }\r\n\r\n  #onTouchEnd(e) {\r\n    let touchMaintainCommands = this.commands.filter(\r\n      (command) => command instanceof CommandTouchMaintain\r\n    );\r\n    touchMaintainCommands.forEach((command) => {\r\n      command.release();\r\n      command.started = false;\r\n    });\r\n\r\n    if (\r\n      this.touchStart.x !== e.changedTouches[0].screenX &&\r\n      this.touchStart.y !== e.changedTouches[0].screenY\r\n    ) {\r\n      this.#onSwipe();\r\n    }\r\n  }\r\n\r\n  #onSwipe() {\r\n    let swipeCommands = this.commands.filter(\r\n      (command) => command instanceof CommandSwipe\r\n    );\r\n    swipeCommands.forEach((swipeCommand) => {\r\n      swipeCommand.execute({ touch: this.touch, touchStart: this.touchStart });\r\n    });\r\n  }\r\n\r\n  registerCommand(command) {\r\n    if (\r\n      this.commands.some(\r\n        (existingCommand) => existingCommand.key === command.key\r\n      )\r\n    ) {\r\n      console.warn(`Command conflict detected on key : ${command.key}`);\r\n    }\r\n    this.commands.push(command);\r\n    return command;\r\n  }\r\n\r\n  unregisterCommand(command) {\r\n    let foundIndex = this.commands.findIndex((cmd) => cmd === command);\r\n    if (foundIndex > -1) {\r\n      this.commands.splice(foundIndex, 1);\r\n    }\r\n  }\r\n\r\n  update(deltaTime) {\r\n    let holdCommands = this.commands.filter(\r\n      (command) =>\r\n        command instanceof CommandHold && this.stack.includes(command.key)\r\n    );\r\n\r\n    holdCommands.forEach((command) => {\r\n      command.execute(deltaTime);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n"],"names":["Vector2","CommandHold","CommandClick","CommandMouseMove","CommandTouchMaintain","CommandToggle","CommandOnce","CommandSwipe"],"mappings":"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"}