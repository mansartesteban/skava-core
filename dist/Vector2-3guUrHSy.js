"use strict";var C=Object.defineProperty;var S=n=>{throw TypeError(n)};var z=(n,t,i)=>t in n?C(n,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[t]=i;var e=(n,t,i)=>z(n,typeof t!="symbol"?t+"":t,i),U=(n,t,i)=>t.has(n)||S("Cannot "+i);var o=(n,t,i)=>(U(n,t,"read from private field"),i?i.call(n):t.get(n)),y=(n,t,i)=>t.has(n)?S("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(n):t.set(n,i),h=(n,t,i,f)=>(U(n,t,"write to private field"),f?f.call(n,i):t.set(n,i),i);const b=require("./Utils/Numeric.cjs.js");require("./Time-DqDcjPhP.js");require("uuid");class F{constructor(t){e(this,"options",{});e(this,"active",!0);e(this,"entity",null);t&&(this.options={...this.options,...t})}updateComponent(t,i){this.active&&this.loop(t,i)}loop(t,i){}refresh(){}setup(){}}var p,u,c,d;const s=class s{constructor(t,i,f,q){y(this,p,0);y(this,u,0);y(this,c,0);y(this,d,1);if(typeof t=="number"&&i===void 0&&f===void 0){let w=t;h(this,p,w>>16&255),h(this,u,w>>8&255),h(this,c,w&255),h(this,d,1)}else h(this,p,t??o(this,p)),h(this,u,i??o(this,u)),h(this,c,f??o(this,c)),h(this,d,q??o(this,d))}get r(){return o(this,p)}set r(t){h(this,p,b.clamp(t,0,255))}get g(){return o(this,u)}set g(t){h(this,u,b.clamp(t,0,255))}get b(){return o(this,c)}set b(t){h(this,c,b.clamp(t,0,255))}get opacity(){return o(this,d)}set opacity(t){h(this,d,t)}get rgba(){return[this.r,this.g,this.b,this.opacity]}get _toString(){return"#"+parseInt(this.r.toFixed(0)).toString(16).padStart(2,"0")+parseInt(this.g.toFixed(0)).toString(16).padStart(2,"0")+parseInt(this.b.toFixed(0)).toString(16).padStart(2,"0")+parseInt(Math.floor(this.opacity*255).toFixed(0)).toString(16).padStart(2,"0")}add(t){if(t instanceof s)return new s(this.r+t.r,this.g+t.g,this.b+t.b,this.opacity+t.opacity);if(typeof t=="number")return new s(this.r+t,this.g+t,this.b+t,this.opacity+t);throw"Unable to compute a addition on the type '"+typeof t+"'. It should be a number or a Color"}multiply(t){if(t instanceof s)return new s(Math.floor(this.r*t.r/255),Math.floor(this.g*t.g/255),Math.floor(this.b*t.b/255),Math.floor(this.opacity*t.opacity));if(typeof t=="number")return new s(this.r*t,this.g*t,this.b*t);throw"Unable to compute a multiplication on the type '"+typeof t+"'. It should be a number or a Color"}lerp(t,i,f=!0){return this.r=(1-i)*this.r+i*t.r,this.g=(1-i)*this.g+i*t.g,this.b=(1-i)*this.b+i*t.b,f&&(this.opacity=(1-i)*this.opacity+i*t.opacity),this}clone(){return new s(this.r,this.g,this.b,this.opacity)}copy(t){return t&&(this.r=t.r,this.g=t.g,this.b=t.b,this.opacity=t.opacity),this}};p=new WeakMap,u=new WeakMap,c=new WeakMap,d=new WeakMap,e(s,"Black",new s(0)),e(s,"White",new s(16777215)),e(s,"Grey",new s(8355711)),e(s,"LightGrey",new s(12566463)),e(s,"DarkGrey",new s(4144959)),e(s,"Red",new s(16711680)),e(s,"Green",new s(65280)),e(s,"Blue",new s(255)),e(s,"Yellow",new s(16776960)),e(s,"Cyan",new s(65535)),e(s,"Fuchsia",new s(16711935));let M=s;var x;const a=class a{constructor(t,i){y(this,x);h(this,x,i?t:b.degreesToRadians(t))}get angle(){return o(this,x)}setAngle(t,i){h(this,x,i?t:b.degreesToRadians(t))}get toRadians(){return this.angle}get toDegrees(){return b.radiansToDegrees(this.angle)}add(t){return new a(this.angle+t.angle,!0)}sub(t){return new a(this.angle-t.angle,!0)}invert(){return h(this,x,-this.angle),this}};x=new WeakMap,e(a,30,new a(Math.PI/6)),e(a,45,new a(Math.PI/4)),e(a,90,new a(Math.PI/2)),e(a,180,new a(Math.PI)),e(a,360,new a(Math.PI*2));let g=a;var m,l;const r=class r{constructor(t=0,i=0){y(this,m,0);y(this,l,0);h(this,m,t),h(this,l,i)}get x(){return o(this,m)}get y(){return o(this,l)}get length(){return Math.sqrt(this.squid)}get squid(){return this.x**2+this.y**2}get normalized(){return this.length===0?r.O:this.clone().divide(this.length)}get rotation(){return new g(Math.atan2(this.y,this.x),!0)}set x(t){h(this,m,t)}set y(t){h(this,l,t)}add(t){if(t instanceof r)this.x+=t.x,this.y+=t.y;else if(typeof t=="number")this.x+=t,this.y+=t;else throw"Unable to compute a addition on the type '"+typeof t+"'. It should be a number or a Vector2";return this}sub(t){if(t instanceof r)this.x-=t.x,this.y-=t.y;else if(typeof t=="number")this.x-=t,this.y-=t;else throw"Unable to compute a subsraction on the type '"+typeof t+"'. It should be a number or a Vector2";return this}divide(t){if(t instanceof r)this.x/=t.x,this.y/=t.y;else if(typeof t=="number")this.x/=t,this.y/=t;else throw"Unable to compute a division on the type '"+typeof t+"'. It should be a number or a Vector2";return this}multiply(t){if(t instanceof r)this.x*=t.x,this.y*=t.y;else if(typeof t=="number")this.x*=t,this.y*=t;else throw"Unable to compute a multiplication on the type '"+typeof t+"'. It should be a number or a Vector2";return this}clampLength(t){return t===0&&this.copy(r.O),this.copy(this.normalized.multiply(Math.min(this.length,t))),this}normalize(){let t=this.normalized;return this.x=t.x,this.y=t.y,this}lerp(t,i){return i=b.clamp(i,0,1),this.x=(1-i)*this.x+i*t.x,this.y=(1-i)*this.y+i*t.y,this}invert(){return this.x=-this.x,this.y=-this.y,this}rotate(t){let i=Math.cos(t.toRadians)*this.x-Math.sin(t.toRadians)*this.y,f=Math.sin(t.toRadians)*this.x+Math.cos(t.toRadians)*this.y;return this.x=i,this.y=f,this}dot(t){if(!(t instanceof r))throw"Unable to compute a dot product on non Vector2 object";return this.x*t.x+this.y*t.y}clone(){return new r(this.x,this.y)}copy(t){return t&&(this.x=t.x,this.y=t.y),this}static from(t){return{to:i=>i.clone().sub(t)}}};m=new WeakMap,l=new WeakMap,e(r,"X",new r(1,0)),e(r,"Y",new r(0,1)),e(r,"O",new r(0,0)),e(r,"ONE",new r(1,1));let I=r;exports.Component=F;exports.RGB=M;exports.Rotation=g;exports.Vector2=I;
