{"version":3,"file":"Entity-BOHIz7Zf.mjs","sources":["../src/Engine/Observer.js","../src/Engine/Entity.js"],"sourcesContent":["class Observer {\r\n  observers;\r\n  events = {};\r\n\r\n  constructor(events = {}) {\r\n    this.observers = [];\r\n    this.events = events;\r\n  }\r\n\r\n  $on(events, callback) {\r\n    if (typeof events == \"string\") {\r\n      events = [events];\r\n    }\r\n\r\n    events.forEach((event) => {\r\n      this.isValidEvent(event);\r\n\r\n      this.observers.push({\r\n        event,\r\n        callback,\r\n      });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  unset(observer) {\r\n    this.observers = this.observers.filter(function (item) {\r\n      if (item !== observer) {\r\n        return item;\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  $emit(event, ...args) {\r\n    let promises = [];\r\n\r\n    this.observers\r\n      .filter((observer) => observer.event === event)\r\n      .forEach((observer) => {\r\n        promises.push(Promise.resolve(observer.callback(...args)));\r\n      });\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  isValidEvent(event) {\r\n    if (this.events) {\r\n      if (!Object.keys(this.events).includes(event)) {\r\n        throw new Error(`Event '${event}' is not a valid event`);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Observer;\r\n","import { Component, Observer } from \"@/Bundles/Core\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { TransformComponent } from \"@/Bundles/Core/Components\";\r\n\r\nclass Entity {\r\n  uuid = uuid();\r\n  components = new Map();\r\n  transform = new TransformComponent();\r\n  scene;\r\n\r\n  observer = new Observer({ SETUP_FINISHED: \"SETUP_FINISHED\" });\r\n\r\n  constructor(...components) {\r\n    components.forEach((component) => this.addComponent(component));\r\n  }\r\n\r\n  addComponent(component) {\r\n    component.entity = this;\r\n    component.setup();\r\n    this.components.set(component.constructor, component);\r\n  }\r\n\r\n  removeComponent(component) {\r\n    this.components.delete(component.constructor);\r\n  }\r\n\r\n  getComponent(component) {\r\n    let componentClass =\r\n      component instanceof Component ? component.constructor : component;\r\n    return this.components.get(componentClass);\r\n  }\r\n\r\n  update(deltaTime, currentTime) {\r\n    this.loop(deltaTime, currentTime);\r\n    this.components.forEach((component) => {\r\n      component.updateComponent(deltaTime, currentTime);\r\n    });\r\n  }\r\n\r\n  loop(deltaTime, currentTime) {}\r\n}\r\n\r\nexport default Entity;\r\n"],"names":["uuid"],"mappings":";;;;;;;AAAA,MAAM,SAAS;AAAA,EAIb,YAAY,SAAS,IAAI;AAHzB;AACA,kCAAS,CAAA;AAGP,SAAK,YAAY;AACjB,SAAK,SAAS;AAAA,EACf;AAAA,EAED,IAAI,QAAQ,UAAU;AACpB,QAAI,OAAO,UAAU,UAAU;AAC7B,eAAS,CAAC,MAAM;AAAA,IACjB;AAED,WAAO,QAAQ,CAAC,UAAU;AACxB,WAAK,aAAa,KAAK;AAEvB,WAAK,UAAU,KAAK;AAAA,QAClB;AAAA,QACA;AAAA,MACR,CAAO;AAAA,IACP,CAAK;AAED,WAAO;AAAA,EACR;AAAA,EAED,MAAM,UAAU;AACd,SAAK,YAAY,KAAK,UAAU,OAAO,SAAU,MAAM;AACrD,UAAI,SAAS,UAAU;AACrB,eAAO;AAAA,MACR;AAAA,IACP,CAAK;AACD,WAAO;AAAA,EACR;AAAA,EAED,MAAM,UAAU,MAAM;AACpB,QAAI,WAAW,CAAA;AAEf,SAAK,UACF,OAAO,CAAC,aAAa,SAAS,UAAU,KAAK,EAC7C,QAAQ,CAAC,aAAa;AACrB,eAAS,KAAK,QAAQ,QAAQ,SAAS,SAAS,GAAG,IAAI,CAAC,CAAC;AAAA,IACjE,CAAO;AAEH,WAAO,QAAQ,IAAI,QAAQ;AAAA,EAC5B;AAAA,EAED,aAAa,OAAO;AAClB,QAAI,KAAK,QAAQ;AACf,UAAI,CAAC,OAAO,KAAK,KAAK,MAAM,EAAE,SAAS,KAAK,GAAG;AAC7C,cAAM,IAAI,MAAM,UAAU,KAAK,wBAAwB;AAAA,MACxD;AAAA,IACF;AAAA,EACF;AACH;AClDA,MAAM,OAAO;AAAA,EAQX,eAAe,YAAY;AAP3B,gCAAOA,GAAI;AACX,sCAAa,oBAAI;AACjB,qCAAY,IAAI;AAChB;AAEA,oCAAW,IAAI,SAAS,EAAE,gBAAgB,iBAAkB,CAAA;AAG1D,eAAW,QAAQ,CAAC,cAAc,KAAK,aAAa,SAAS,CAAC;AAAA,EAC/D;AAAA,EAED,aAAa,WAAW;AACtB,cAAU,SAAS;AACnB,cAAU,MAAK;AACf,SAAK,WAAW,IAAI,UAAU,aAAa,SAAS;AAAA,EACrD;AAAA,EAED,gBAAgB,WAAW;AACzB,SAAK,WAAW,OAAO,UAAU,WAAW;AAAA,EAC7C;AAAA,EAED,aAAa,WAAW;AACtB,QAAI,iBACF,qBAAqB,YAAY,UAAU,cAAc;AAC3D,WAAO,KAAK,WAAW,IAAI,cAAc;AAAA,EAC1C;AAAA,EAED,OAAO,WAAW,aAAa;AAC7B,SAAK,KAAK,WAAW,WAAW;AAChC,SAAK,WAAW,QAAQ,CAAC,cAAc;AACrC,gBAAU,gBAAgB,WAAW,WAAW;AAAA,IACtD,CAAK;AAAA,EACF;AAAA,EAED,KAAK,WAAW,aAAa;AAAA,EAAE;AACjC;"}